{"version":3,"sources":["logo.svg","firebase.js","components/LinkForm.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinkForm","props","initialStateValues","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","currentId","className","onSubmit","preventDefault","addOrEditLink","onChange","type","placeholder","rows","Links","links","setLinks","setCurrentId","linkObject","console","log","set","toast","update","onDeleteLink","window","confirm","delete","autoClose","getLinks","onSnapshot","querySnapshot","docs","forEach","push","map","link","onClick","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2073ba9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","  import firebase from 'firebase/app';\r\n  import 'firebase/firestore';\r\n  \r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyB3LVRrTJToE7Yoj91k7gGdftQpClCvUw4\",\r\n    authDomain: \"fb-crud-react-82d63.firebaseapp.com\",\r\n    projectId: \"fb-crud-react-82d63\",\r\n    storageBucket: \"fb-crud-react-82d63.appspot.com\",\r\n    messagingSenderId: \"285618674049\",\r\n    appId: \"1:285618674049:web:d90d492570d30f0c063080\"\r\n  };\r\n  // Initialize Firebase\r\n\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n\r\n  export const db = fb.firestore();","import { react, useState, useEffect } from 'react';\r\n\r\nimport { db } from '../firebase';\r\nconst LinkForm = (props) => {\r\n\r\n    const initialStateValues = {\r\n        url: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n\r\n    const [values, setValues] = useState(initialStateValues);\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target; // Allow acces to the control name and its value\r\n        setValues({...values, [name]: value}) // ...values copy actual value and update the value\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.addOrEditLink(values);\r\n\r\n        setValues({...initialStateValues});\r\n    }\r\n\r\n    const getLinkById = async (id) => {\r\n        const doc = await db.collection('links').doc(id).get();\r\n        setValues({...doc.data()})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId === '') {\r\n            setValues({...initialStateValues});\r\n        } else {\r\n            getLinkById(props.currentId);\r\n        }\r\n    }, [props.currentId]);\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input onChange={handleInputChange} type=\"text\" className=\"form-control\" placeholder=\"https://someurl.com\" name=\"url\" value={values.url} />\r\n            </div>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input onChange={handleInputChange} type=\"text\" className=\"form-control\" placeholder=\"name\" placeholder=\"Website name\" name=\"name\" value={values.name}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea onChange={handleInputChange} className=\"description\" rows=\"3\" className=\"form-control\" placeholder=\"Write a description\" name=\"description\" value={values.description}></textarea>\r\n            </div>\r\n\r\n            <button className=\"btn btn-primary btn-block\">\r\n                {props.currentId === '' ? 'Save' : 'Update'}\r\n            </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LinkForm;\r\n","import { react, useState, useEffect } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport LinkForm from './LinkForm';\r\n\r\nimport { db } from '../firebase';\r\n\r\nconst Links = () => {\r\n\r\n    const [links, setLinks] = useState([]);\r\n    const [currentId, setCurrentId] = useState('');\r\n    \r\n    const addOrEditLink = async (linkObject) => {        \r\n        if (currentId === ''){\r\n            console.log(linkObject)\r\n            await db.collection('links').doc().set(linkObject); //collection create a stack of data - doc create an id - set savedata\r\n            toast('New link added', { type: 'success' })\r\n        } else {\r\n            await db.collection('links').doc(currentId).update(linkObject);\r\n            toast('Link updated', { type: 'info' });\r\n            setCurrentId('');\r\n        }\r\n    };\r\n\r\n    const onDeleteLink = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this link?')) {\r\n            await db.collection('links').doc(id).delete();\r\n            toast('Link removed', { type: 'error', autoClose: 2000 })\r\n        }\r\n    }\r\n\r\n    const getLinks = async () => {\r\n         db.collection('links').onSnapshot((querySnapshot) => { // Allows you to get the data updated every time you add something new\r\n            const docs = [];\r\n            querySnapshot.forEach(doc => {\r\n                docs.push({...doc.data(), id:doc.id}); // Get data from registry and add its id\r\n            }); \r\n            setLinks(docs);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLinks();\r\n    }, [])\r\n//<LinkForm addOrEditLink={addOrEditLink}/>\r\n    return (\r\n    <div>\r\n        <div className=\"col-md-16 p-2\">\r\n            <LinkForm {...{addOrEditLink, currentId, links}} />\r\n        </div>\r\n        <div className=\"col-md-16 p-2\">\r\n            {links.map(link => (\r\n                <div className=\"card mb-1\" key={link.id}>\r\n                    <div className=\"card-body\"> \r\n                        <div className=\"d-flex justify-content-between\">\r\n                        <h4>{link.name}</h4>\r\n                        <div>\r\n                            <i className=\"material-icons text-danger\" onClick={() => onDeleteLink(link.id)}>close</i>\r\n                            <i className=\"material-icons\" onClick={() => setCurrentId(link.id)}>create</i>\r\n                        </div>\r\n                        </div>\r\n                        <p>{link.description}</p>\r\n                        <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">Go to website</a>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Links from './components/Links';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container p-4\">\r\n      <div className=\"row\">\r\n        <Links />\r\n      </div>\r\n      <ToastContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './firebase';\r\n\r\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}